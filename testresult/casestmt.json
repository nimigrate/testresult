[
{"name":"tests/casestmt/t18964.nim c","category":"casestmt","target":"c","action":"reject","result":"reSuccess","expected":"invalid order of case branches","given":"invalid order of case branches","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/t7699.nim c","category":"casestmt","target":"c","action":"reject","result":"reSuccess","expected":"case statement cannot work on enums with holes for computed goto","given":"case statement cannot work on enums with holes for computed goto","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tcaseexpr1.nim c","category":"casestmt","target":"c","action":"reject","result":"reSuccess","expected":"","given":"type mismatch: got <string> but expected 'int literal(10)'","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tcaseoverlaprange.nim c","category":"casestmt","target":"c","action":"reject","result":"reSuccess","expected":"duplicate case label","given":"duplicate case label","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tcaseoverlaprange2.nim c","category":"casestmt","target":"c","action":"reject","result":"reSuccess","expected":"duplicate case label","given":"duplicate case label","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tcasestmt.nim c","category":"casestmt","target":"c","action":"run","result":"reJoined","expected":"","given":"","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tcomputedgoto.nim c","category":"casestmt","target":"c","action":"run","result":"reJoined","expected":"","given":"","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tcstring.nim c","category":"casestmt","target":"c","action":"run","result":"reSuccess","expected":"","given":"","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tcstring.nim cpp","category":"casestmt","target":"cpp","action":"run","result":"reSuccess","expected":"","given":"","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tcstring.nim js","category":"casestmt","target":"js","action":"run","result":"reSuccess","expected":"","given":"","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tincompletecaseobject.nim c","category":"casestmt","target":"c","action":"reject","result":"reSuccess","expected":"not all cases are covered; missing: {nnkComesFrom, nnkDotCall, nnkHiddenCallConv, nnkVarTuple, nnkCurlyExpr, nnkRange, nnkCheckedFieldExpr, nnkDerefExpr, nnkElifExpr, nnkElseExpr, nnkLambda, nnkDo, nnkBind, nnkClosedSymChoice, nnkHiddenSubConv, nnkConv, nnkStaticExpr, nnkAddr, nnkHiddenAddr, nnkHiddenDeref, nnkObjDownConv, nnkObjUpConv, nnkChckRangeF, nnkChckRange64, nnkChckRange, nnkStringToCString, nnkCStringToString, nnkFastAsgn, nnkGenericParams, nnkFormalParams, nnkOfInherit, nnkImportAs, nnkConverterDef, nnkMacroDef, nnkTemplateDef, nnkIteratorDef, nnkOfBranch, nnkElifBranch, nnkExceptBranch, nnkElse, nnkAsmStmt, nnkTypeDef, nnkFinally, nnkContinueStmt, nnkImportStmt, nnkImportExceptStmt, nnkExportStmt, nnkExportExceptStmt, nnkFromStmt, nnkIncludeStmt, nnkUsingStmt, nnkBlockExpr, nnkStmtListType, nnkBlockType, nnkWith, nnkWithout, nnkTypeOfExpr, nnkObjectTy, nnkTupleTy, nnkTupleClassTy, nnkTypeClassTy, nnkStaticTy, nnkRecList, nnkRecCase, nnkRecWhen, nnkVarTy, nnkConstTy, nnkMutableTy, nnkDistinctTy, nnkProcTy, nnkIteratorTy, nnkSharedTy, nnkEnumTy, nnkEnumFieldDef, nnkArgList, nnkPattern, nnkReturnToken, nnkClosure, nnkGotoState, nnkState, nnkBreakState, nnkFuncDef, nnkTupleConstr}\n","given":"not all cases are covered; missing: {nnkComesFrom, nnkDotCall, nnkHiddenCallConv, nnkVarTuple, nnkCurlyExpr, nnkRange, nnkCheckedFieldExpr, nnkDerefExpr, nnkElifExpr, nnkElseExpr, nnkLambda, nnkDo, nnkBind, nnkClosedSymChoice, nnkHiddenSubConv, nnkConv, nnkStaticExpr, nnkAddr, nnkHiddenAddr, nnkHiddenDeref, nnkObjDownConv, nnkObjUpConv, nnkChckRangeF, nnkChckRange64, nnkChckRange, nnkStringToCString, nnkCStringToString, nnkFastAsgn, nnkGenericParams, nnkFormalParams, nnkOfInherit, nnkImportAs, nnkConverterDef, nnkMacroDef, nnkTemplateDef, nnkIteratorDef, nnkOfBranch, nnkElifBranch, nnkExceptBranch, nnkElse, nnkAsmStmt, nnkTypeDef, nnkFinally, nnkContinueStmt, nnkImportStmt, nnkImportExceptStmt, nnkExportStmt, nnkExportExceptStmt, nnkFromStmt, nnkIncludeStmt, nnkUsingStmt, nnkBlockExpr, nnkStmtListType, nnkBlockType, nnkWith, nnkWithout, nnkTypeOfExpr, nnkObjectTy, nnkTupleTy, nnkTupleClassTy, nnkTypeClassTy, nnkStaticTy, nnkRecList, nnkRecCase, nnkRecWhen, nnkVarTy, nnkConstTy, nnkMutableTy, nnkDistinctTy, nnkProcTy, nnkIteratorTy, nnkSharedTy, nnkEnumTy, nnkEnumFieldDef, nnkArgList, nnkPattern, nnkReturnToken, nnkClosure, nnkGotoState, nnkState, nnkBreakState, nnkFuncDef, nnkTupleConstr}","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tincompletecaseobject2.nim c","category":"casestmt","target":"c","action":"reject","result":"reSuccess","expected":"","given":"not all cases are covered; missing: {A, B}","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"},
{"name":"tests/casestmt/tlinearscanend.nim c","category":"casestmt","target":"c","action":"compile","result":"reSuccess","expected":"","given":"","machine":"loongson-pc","commit":"26c5f97614d","branch":"lit-fix-objc-math"}]
